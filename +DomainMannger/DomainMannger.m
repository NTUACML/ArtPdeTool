classdef DomainMannger < handle
    %DOMAINMANNGER Summary of this class goes here
    %   Detailed explanation goes here
    
    properties
        num_domain_ = 0;
        domain_end_id_ = 0;
        domain_data_ = [];
    end
    
    methods
        function this = DomainMannger()
        end
        
        function domain_id = addDomain(this, domain)
            if(isa(domain, 'Domain.DomainBase'))
                % add num_domain
                this.num_domain_ = this.num_domain_ + 1;
                domain_id = this.num_domain_;
                domain.domain_id_ = domain_id;
                % contianer re-allocated
                tmp_data = this.domain_data_;
                tmp_id = this.domain_end_id_;
                this.domain_data_ = cell(this.num_domain_, 1);
                this.domain_end_id_ = zeros(this.num_domain_, 1);
                % copy privious data
                for i = 1: this.num_domain_-1
                    this.domain_data_{i} = tmp_data{i};
                    this.domain_end_id_(i) = tmp_id(i);
                end
                % new domain data
                this.domain_data_{this.num_domain_} = domain;
                % new end id
                prev_end_id = 0;
                if(this.num_domain_ > 1)
                    prev_end_id = this.domain_end_id_(this.num_domain_-1);
                end
                this.domain_end_id_(this.num_domain_) = prev_end_id ...
                                          + (domain.variable_.num_dof_...
                                          * domain.variable_.num_data_);  
            else
                disp('Error <DomainMannger> - addDomain!');
                disp('> Domain data should be generated by Domain class!');
            end
        end
        
        function assembly_id = queryAssemblyId(this, domain, domain_basis_id)
            if(isa(domain, 'Domain.DomainBase') && domain.domain_id_ > 0)
                assembly_id = this.LocalId2Global_AllDOF(domain, domain_basis_id);
            else
                disp('Error <DomainMannger> - queryEssemblyId!');
                disp('> Domain data should be generated by Domain class, ');
                disp('> and be added into domain mannger');
                assembly_id = [];
            end
        end
    end
    
    methods (Access = private)
        function global_id = LocalId2Global_AllDOF(this, domain, local_id)
            %num_local_id = length(local_id);
            num_dof = domain.variable_.num_dof_;
            
            % generate global_id return data
            global_id = cell(num_dof, 1);
            
            % id mapping
            prev_domain_id = 0;
            if(domain.domain_id_ > 1)
                prev_domain_id = this.domain_end_id_(domain.domain_id_ - 1);
            end
            
            for dof_i = 1 : num_dof 
                global_id{dof_i} = prev_domain_id ... 
                                 + (local_id - 1) * num_dof + dof_i;
            end
            
        end
    end
    
end

