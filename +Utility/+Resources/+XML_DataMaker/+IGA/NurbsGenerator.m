function nurbs_out = NurbsGenerator(nurbs_name)
import Utility.NurbsUtility.Nurbs

switch nurbs_name
    case 'Unit_Square'
        nurbs = Rectangle(1, 1, [0.5 0.5]);
        status = true;
    case 'Rectangle'        
        D = 2; L = 20;
        nurbs = Rectangle(D, L, [0 0]);
        status = true;  
    case 'Plane_quarter_hole'
        nurbs = Plane_quarter_hole();
        status = true;
    case 'Solid_quarter_hole'        
        nurbs = Solid_quater_hole(1);
        status = true;    
    case 'Lens_top_right'
        nurbs = Surface_Lens('top_right');
        status = true;
    case 'Lens_bottom_right'
        nurbs = Surface_Lens('bottom_right');
        status = true;
    case 'Lens_top_left'
        nurbs = Surface_Lens('top_left');
        status = true;
    case 'Lens_bottom_left'
        nurbs = Surface_Lens('bottom_left');
        status = true;    
    case '3D_Lens_left'
        nurbs = Solid_Lens('left');
        status = true;
    case '3D_Lens_right'
        nurbs = Solid_Lens('right');
        status = true;        
    otherwise
        str = [nurbs_name, 'does not exist in the current library.'];
        disp(str);
        status = false;
end

if status
    if isa(nurbs, 'Nurbs')
        nurbs_out = nurbs;
    else
        nurbs_out = OutPutFiles(nurbs);
    end
end

end

function nurbs_out= OutPutFiles(nurbs)
import Utility.BasicUtility.TensorProduct

% nurbs knots
knots = nurbs.knots;

% nurbs control point
geo_dim = size(knots, 2);
control_pnt = zeros(prod(nurbs.number), 4);
switch geo_dim
    case 1
        TD_1 = TensorProduct({nurbs.number(1)});
        for k = 1:TD_1.total_num_
            local_index = TD_1.to_local_index(k);
            control_pnt(k,:) = nurbs.coefs(:, local_index{1})';
        end
    case 2
        TD_2 = TensorProduct({nurbs.number(1) nurbs.number(2)});
        for k = 1:TD_2.total_num_
            local_index = TD_2.to_local_index(k);
            control_pnt(k,:) = nurbs.coefs(:, local_index{1}, local_index{2})';
        end
    case 3
        TD_3 = TensorProduct({nurbs.number(1) nurbs.number(2) nurbs.number(3)});
        for k = 1:TD_3.total_num_
            local_index = TD_3.to_local_index(k);
            control_pnt(k,:) = nurbs.coefs(:, local_index{1}, local_index{2}, local_index{3})';
        end
end

control_pnt(:,1) = control_pnt(:,1)./control_pnt(:,4);
control_pnt(:,2) = control_pnt(:,2)./control_pnt(:,4);
control_pnt(:,3) = control_pnt(:,3)./control_pnt(:,4);

% nurbs order
order = nurbs.order-1;

import Utility.BasicUtility.PointList
control_point_list = PointList(control_pnt);

import Utility.NurbsUtility.Nurbs
nurbs_out = Nurbs(knots, order, control_point_list);

end


function nurbs = Plane_quarter_hole
import Utility.BasicUtility.PointList
import Utility.NurbsUtility.Nurbs

knot_vectors = {[0 0 0 0.5 1 1 1]  [0 0 0 1 1 1]};
order = [2 2];
temp = [-1 0 0 1;
    -1 sqrt(2)-1 0 (1+1/sqrt(2))/2;
     1-sqrt(2) 1 0 (1+1/sqrt(2))/2;
     0 1 0 1;
    
    -2.5 0 0 1;
    -2.5 0.75 0 1;
    -0.75 2.5 0 1;
     0 2.5 0 1;
    
    -4 0 0 1;
    -4 4 0 1;
    -4 4 0 1;
     0 4 0 1];
 
temp(:,1) = -temp(:,1);
 
control_point_list = PointList(temp);

nurbs = Nurbs(knot_vectors, order, control_point_list);

% knots = {[0 0 0 0.5 1 1 1]  [0 0 0 1 1 1]};
% coefs  = [zeros(3,4,3); ones(1,4,3)];
% 
% coefs(1:2,1,1) = [-1 0];            coefs(4,1,1) = 1;
% coefs(1:2,2,1) = [-1 sqrt(2)-1];    coefs(4,2,1) = (1+1/sqrt(2))/2;
% coefs(1:2,3,1) = [1-sqrt(2) 1];     coefs(4,3,1) = (1+1/sqrt(2))/2;
% coefs(1:2,4,1) = [0 1];             coefs(4,4,1) = 1;
% 
% coefs(1:2,1,2) = [-2.5 0];          coefs(4,1,2) = 1;
% coefs(1:2,2,2) = [-2.5 0.75];       coefs(4,2,2) = 1;
% coefs(1:2,3,2) = [-0.75 2.5];       coefs(4,3,2) = 1;
% coefs(1:2,4,2) = [0 2.5];           coefs(4,4,2) = 1;
% 
% coefs(1:2,1,3) = [-4 0];            coefs(4,1,3) = 1;
% coefs(1:2,2,3) = [-4 4];            coefs(4,2,3) = 1;
% coefs(1:2,3,3) = [-4 4];            coefs(4,3,3) = 1;
% coefs(1:2,4,3) = [0 4];             coefs(4,4,3) = 1;
% 
% coefs(1,:,:) = -coefs(1,:,:);
% for i = 1:3
%     coefs(i,:,:) = coefs(i,:,:).*coefs(4,:,:);
% end
% 
% nurbs = nrbmak(coefs,knots);
% 
% nurbs = nrbdegelev(nurbs, [1 2]);

end

function nurbs = Solid_quater_hole(height)
import Utility.BasicUtility.PointList
import Utility.NurbsUtility.Nurbs
import Utility.NurbsUtility.NurbsType
nurbs = Plane_quarter_hole();

nurbs.basis_number_(3) = 2;
nurbs.knot_vectors_{1,3} = [0 0 1 1];
nurbs.order_(3) = 1;

temp = nurbs.control_points_(:,:);
temp(:,3) = height;
nurbs.control_points_ = PointList([nurbs.control_points_(:,:); temp]);

nurbs.type_ = NurbsType.Solid;
end

function nurbs = Rectangle(width, length, center)
import Utility.BasicUtility.PointList
import Utility.NurbsUtility.Nurbs

knot_vectors = {[0 0 1 1] [0 0 1 1]};
order = [1 1];
temp = [center(1)-length/2 center(2)-width/2 0.0 1.0;
        center(1)+length/2 center(2)-width/2 0.0 1.0;
        center(1)-length/2 center(2)+width/2 0.0 1.0;
        center(1)+length/2 center(2)+width/2 0.0 1.0];
control_point_list = PointList(temp);

nurbs = Nurbs(knot_vectors, order, control_point_list);
end

function nurbs = Solid_Lens(str)
import Utility.BasicUtility.PointList
import Utility.NurbsUtility.Nurbs

knot_vectors = {[0 0 0 1 1 1] [0 0 0 0.5 0.5 1 1 1] [0 0 0 0 1 1 1 1]};
order = [2 2 3];

switch str
    case 'right'
        temp = [89.673928030621 -0.000000000000 -6.879260917442 1.000000000000;
            95.904289874264 -0.000000000000 -8.010000000000 0.995973631625;
            102.236428500000 -0.000000000000 -8.009999999999 1.000000000000;
            89.673928030621 12.562500469379 -6.879260917442 0.707106781187;
            95.904289874264 6.332138625736 -8.010000000000 0.704259708805;
            102.236428500000 -0.000000000000 -8.009999999999 0.707106781187;
            102.236428500000 12.562500469379 -6.879260917442 1.000000000000;
            102.236428500000 6.332138625736 -8.010000000000 0.995973631625;
            102.236428500000 -0.000000000000 -8.009999999999 1.000000000000;
            114.798928969379 12.562500469379 -6.879260917442 0.707106781187;
            108.568567125736 6.332138625736 -8.010000000000 0.704259708805;
            102.236428500000 -0.000000000000 -8.009999999999 0.707106781187;
            114.798928969379 -0.000000000000 -6.879260917442 1.000000000000;
            108.568567125736 -0.000000000000 -8.010000000000 0.995973631625;
            102.236428500000 -0.000000000000 -8.009999999999 1.000000000000;
            
            89.673928030621	-0.000000000000	-6.586173945	1.000000000000;
            95.904289874264	-0.000000000000	-7.34	0.995973631625;
            102.236428500000	-0.000000000000	-7.34	1.000000000000;
            89.673928030621	12.562500469379	-6.586173945	0.707106781187;
            95.904289874264	6.332138625736	-7.34	0.704259708805;
            102.236428500000	-0.000000000000	-7.34	0.707106781187;
            102.236428500000	12.562500469379	-6.586173945	1.000000000000;
            102.236428500000	6.332138625736	-7.34	0.995973631625;
            102.236428500000	-0.000000000000	-7.34	1.000000000000;
            114.798928969379	12.562500469379	-6.586173945	0.707106781187;
            108.568567125736	6.332138625736	-7.34	0.704259708805;
            102.236428500000	-0.000000000000	-7.34	0.707106781187;
            114.798928969379	-0.000000000000	-6.586173945	1.000000000000;
            108.568567125736	-0.000000000000	-7.34	0.995973631625;
            102.236428500000	-0.000000000000	-7.34	1.000000000000;
            
            89.673928030621	-0.000000000000	-6.293086972	1.000000000000;
            95.904289874264	-0.000000000000	-6.67	0.995973631625;
            102.236428500000	-0.000000000000	-6.67	1.000000000000;
            89.673928030621	12.562500469379	-6.293086972	0.707106781187;
            95.904289874264	6.332138625736	-6.67	0.704259708805;
            102.236428500000	-0.000000000000	-6.67	0.707106781187;
            102.236428500000	12.562500469379	-6.293086972	1.000000000000;
            102.236428500000	6.332138625736	-6.67	0.995973631625
            102.236428500000	-0.000000000000	-6.67	1.000000000000
            114.798928969379	12.562500469379	-6.293086972	0.707106781187
            108.568567125736	6.332138625736	-6.67	0.704259708805;
            102.236428500000	-0.000000000000	-6.67	0.707106781187;
            114.798928969379	-0.000000000000	-6.293086972	1.000000000000;
            108.568567125736	-0.000000000000	-6.67	0.995973631625;
            102.236428500000	-0.000000000000	-6.67	1.000000000000;
            
            89.673928030621	-0.000000000000	-6.000000000000	1.000000000000;
            95.904289874264	-0.000000000000	-6.000000000000	0.995973631625;
            102.236428500000	-0.000000000000	-6.000000000000	1.000000000000;
            89.673928030621	12.562500469379	-6.000000000000	0.707106781187;
            95.904289874264	6.332138625736	-6.000000000000	0.704259708805;
            102.236428500000	-0.000000000000	-6.000000000000	0.707106781187;
            102.236428500000	12.562500469379	-6.000000000000	1.000000000000;
            102.236428500000	6.332138625736	-6.000000000000	0.995973631625;
            102.236428500000	-0.000000000000	-6.000000000000	1.000000000000;
            114.798928969379	12.562500469379	-6.000000000000	0.707106781187;
            108.568567125736	6.332138625736	-6.000000000000	0.704259708805;
            102.236428500000	-0.000000000000	-6.000000000000	0.707106781187;
            114.798928969379	-0.000000000000	-6.000000000000	1.000000000000;
            108.568567125736	-0.000000000000	-6.000000000000	0.995973631625;
            102.236428500000	-0.000000000000	-6.000000000000	1.000000000000];
    case 'left'
        temp = [
            114.798928969379 -0.000000000000 -6.879260917442 1.000000000000
            108.568567125736 -0.000000000000 -8.010000000000 0.995973631625
            102.236428500000 -0.000000000000 -8.009999999999 1.000000000000
            114.798928969379 -12.562500469379 -6.879260917442 0.707106781187
            108.568567125736 -6.332138625736 -8.010000000000 0.704259708805
            102.236428500000 -0.000000000000 -8.009999999999 0.707106781187
            102.236428500000 -12.562500469379 -6.879260917442 1.000000000000
            102.236428500000 -6.332138625736 -8.010000000000 0.995973631625
            102.236428500000 -0.000000000000 -8.009999999999 1.000000000000
            89.673928030621 -12.562500469379 -6.879260917442 0.707106781187
            95.904289874264 -6.332138625736 -8.010000000000 0.704259708805
            102.236428500000 -0.000000000000 -8.009999999999 0.707106781187
            89.673928030621 -0.000000000000 -6.879260917442 1.000000000000
            95.904289874264 -0.000000000000 -8.010000000000 0.995973631625
            102.236428500000 -0.000000000000 -8.009999999999 1.000000000000
            
            114.798928969379	-0.000000000000	-6.586173945	1.000000000000
            108.568567125736	-0.000000000000	-7.34	0.995973631625
            102.236428500000	-0.000000000000	-7.34	1.000000000000
            114.798928969379	-12.562500469379	-6.586173945	0.707106781187
            108.568567125736	-6.332138625736	-7.34	0.704259708805
            102.236428500000	-0.000000000000	-7.34	0.707106781187
            102.236428500000	-12.562500469379	-6.586173945	1.000000000000
            102.236428500000	-6.332138625736	-7.34	0.995973631625
            102.236428500000	-0.000000000000	-7.34	1.000000000000
            89.673928030621	-12.562500469379	-6.586173945	0.707106781187
            95.904289874264	-6.332138625736	-7.34	0.704259708805
            102.236428500000	-0.000000000000	-7.34	0.707106781187
            89.673928030621	-0.000000000000	-6.586173945	1.000000000000
            95.904289874264	-0.000000000000	-7.34	0.995973631625
            102.236428500000	-0.000000000000	-7.34	1.000000000000
            
            114.798928969379	-0.000000000000	-6.293086972	1.000000000000
            108.568567125736	-0.000000000000	-6.67	0.995973631625
            102.236428500000	-0.000000000000	-6.67	1.000000000000
            114.798928969379	-12.562500469379	-6.293086972	0.707106781187
            108.568567125736	-6.332138625736	-6.67	0.704259708805
            102.236428500000	-0.000000000000	-6.67	0.707106781187
            102.236428500000	-12.562500469379	-6.293086972	1.000000000000
            102.236428500000	-6.332138625736	-6.67	0.995973631625
            102.236428500000	-0.000000000000	-6.67	1.000000000000
            89.673928030621	-12.562500469379	-6.293086972	0.707106781187
            95.904289874264	-6.332138625736	-6.67	0.704259708805
            102.236428500000	-0.000000000000	-6.67	0.707106781187
            89.673928030621	-0.000000000000	-6.293086972	1.000000000000
            95.904289874264	-0.000000000000	-6.67	0.995973631625
            102.236428500000	-0.000000000000	-6.67	1.000000000000
            
            114.798928969379	-0.000000000000	-6.000000000000	1.000000000000
            108.568567125736	-0.000000000000	-6.000000000000	0.995973631625
            102.236428500000	-0.000000000000	-6.000000000000	1.000000000000
            114.798928969379	-12.562500469379	-6.000000000000	0.707106781187
            108.568567125736	-6.332138625736	-6.000000000000	0.704259708805
            102.236428500000	-0.000000000000	-6.000000000000	0.707106781187
            102.236428500000	-12.562500469379	-6.000000000000	1.000000000000
            102.236428500000	-6.332138625736	-6.000000000000	0.995973631625
            102.236428500000	-0.000000000000	-6.000000000000	1.000000000000
            89.673928030621	-12.562500469379	-6.000000000000	0.707106781187
            95.904289874264	-6.332138625736	-6.000000000000	0.704259708805
            102.236428500000	-0.000000000000	-6.000000000000	0.707106781187
            89.673928030621	-0.000000000000	-6.000000000000	1.000000000000
            95.904289874264	-0.000000000000	-6.000000000000	0.995973631625
            102.236428500000	-0.000000000000	-6.000000000000	1.000000000000];
end
control_point_list = PointList(temp);

nurbs = Nurbs(knot_vectors, order, control_point_list);
end

function nurbs = Surface_Lens(str)
import Utility.BasicUtility.PointList
import Utility.NurbsUtility.Nurbs

knot_vectors = {[0 0 0 1 1 1] [0 0 0 0.5 0.5 1 1 1]};
order = [2 2];

switch str
    case 'bottom_right'
        temp = [114.798928969379	-0.000000000000	-6.000000000000	1.000000000000
            108.568567125736	-0.000000000000	-6.000000000000	0.995973631625
            102.236428500000	-0.000000000000	-6.000000000000	1.000000000000
            114.798928969379	-12.562500469379	-6.000000000000	0.707106781187
            108.568567125736	-6.332138625736	-6.000000000000	0.704259708805
            102.236428500000	-0.000000000000	-6.000000000000	0.707106781187
            102.236428500000	-12.562500469379	-6.000000000000	1.000000000000
            102.236428500000	-6.332138625736	-6.000000000000	0.995973631625
            102.236428500000	-0.000000000000	-6.000000000000	1.000000000000
            89.673928030621	-12.562500469379	-6.000000000000	0.707106781187
            95.904289874264	-6.332138625736	-6.000000000000	0.704259708805
            102.236428500000	-0.000000000000	-6.000000000000	0.707106781187
            89.673928030621	-0.000000000000	-6.000000000000	1.000000000000
            95.904289874264	-0.000000000000	-6.000000000000	0.995973631625
            102.236428500000	-0.000000000000	-6.000000000000	1.000000000000];
    case 'bottom_left'
        temp = [89.673928030621	-0.000000000000	-6.000000000000	1.000000000000
            95.904289874264	-0.000000000000	-6.000000000000	0.995973631625
            102.236428500000	-0.000000000000	-6.000000000000	1.000000000000
            89.673928030621	12.562500469379	-6.000000000000	0.707106781187
            95.904289874264	6.332138625736	-6.000000000000	0.704259708805
            102.236428500000	-0.000000000000	-6.000000000000	0.707106781187
            102.236428500000	12.562500469379	-6.000000000000	1.000000000000
            102.236428500000	6.332138625736	-6.000000000000	0.995973631625
            102.236428500000	-0.000000000000	-6.000000000000	1.000000000000
            114.798928969379	12.562500469379	-6.000000000000	0.707106781187
            108.568567125736	6.332138625736	-6.000000000000	0.704259708805
            102.236428500000	-0.000000000000	-6.000000000000	0.707106781187
            114.798928969379	-0.000000000000	-6.000000000000	1.000000000000
            108.568567125736	-0.000000000000	-6.000000000000	0.995973631625
            102.236428500000	-0.000000000000	-6.000000000000	1.000000000000];
    case 'top_right'
        temp = [114.798928969379 -0.000000000000 -6.879260917442 1.000000000000
            108.568567125736 -0.000000000000 -8.010000000000 0.995973631625
            102.236428500000 -0.000000000000 -8.009999999999 1.000000000000
            114.798928969379 -12.562500469379 -6.879260917442 0.707106781187
            108.568567125736 -6.332138625736 -8.010000000000 0.704259708805
            102.236428500000 -0.000000000000 -8.009999999999 0.707106781187
            102.236428500000 -12.562500469379 -6.879260917442 1.000000000000
            102.236428500000 -6.332138625736 -8.010000000000 0.995973631625
            102.236428500000 -0.000000000000 -8.009999999999 1.000000000000
            89.673928030621 -12.562500469379 -6.879260917442 0.707106781187
            95.904289874264 -6.332138625736 -8.010000000000 0.704259708805
            102.236428500000 -0.000000000000 -8.009999999999 0.707106781187
            89.673928030621 -0.000000000000 -6.879260917442 1.000000000000
            95.904289874264 -0.000000000000 -8.010000000000 0.995973631625
            102.236428500000 -0.000000000000 -8.009999999999 1.000000000000];
    case 'top_left'
        temp = [89.673928030621 -0.000000000000 -6.879260917442 1.000000000000
            95.904289874264 -0.000000000000 -8.010000000000 0.995973631625
            102.236428500000 -0.000000000000 -8.009999999999 1.000000000000
            89.673928030621 12.562500469379 -6.879260917442 0.707106781187
            95.904289874264 6.332138625736 -8.010000000000 0.704259708805
            102.236428500000 -0.000000000000 -8.009999999999 0.707106781187
            102.236428500000 12.562500469379 -6.879260917442 1.000000000000
            102.236428500000 6.332138625736 -8.010000000000 0.995973631625
            102.236428500000 -0.000000000000 -8.009999999999 1.000000000000
            114.798928969379 12.562500469379 -6.879260917442 0.707106781187
            108.568567125736 6.332138625736 -8.010000000000 0.704259708805
            102.236428500000 -0.000000000000 -8.009999999999 0.707106781187
            114.798928969379 -0.000000000000 -6.879260917442 1.000000000000
            108.568567125736 -0.000000000000 -8.010000000000 0.995973631625
            102.236428500000 -0.000000000000 -8.009999999999 1.000000000000];
end

control_point_list = PointList(temp);

nurbs = Nurbs(knot_vectors, order, control_point_list);
end
